// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-03-05 10:40:30.642382 +0800 CST m=+0.063826798

package docs

import (
	"bytes"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "This is a gocele server.",
        "title": "Swagger gocele",
        "contact": {
            "name": "iceyao",
            "url": "https://www.iceyao.com.cn",
            "email": "yao3690093@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "127.0.0.1:9094",
    "basePath": "/apis/v1",
    "paths": {
        "/add": {
            "post": {
                "description": "Add测试",
                "summary": "Add",
                "parameters": [
                    {
                        "description": "The numbers",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": " Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/mul": {
            "post": {
                "description": "Mul测试",
                "summary": "Mul",
                "parameters": [
                    {
                        "description": "The numbers",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": " Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "post": {
                "description": "Tasks测试",
                "summary": "Tasks",
                "parameters": [
                    {
                        "description": "The uuid",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": " OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": " Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo swaggerInfo

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
